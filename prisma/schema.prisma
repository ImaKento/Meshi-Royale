// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String   @default("ゲスト")
  candidateStore String? @map("candidate_store")
  email     String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roomUsers RoomUser[]
}

model Room {
  id          String   @id @default(uuid())
  name        String   @default("新しいルーム")
  roomCode    String   @unique // ユーザーが入力する6桁のコード
  isActive    Boolean  @default(true) // ルームがアクティブかどうか
  maxUsers    Int      @default(4) // 最大参加人数
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  roomUsers RoomUser[]
}

model RoomUser {
  roomId    String   @map("room_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([roomId, userId])

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
